// Generated by CoffeeScript 1.8.0
var Template, UError, VERSION, l, _, _B,
  __slice = [].slice;

_ = (_B = require('uberscore'))._;

l = new _B.Logger('uRequire/ModuleGeneratorTemplates');

_.mixin((require('underscore.string')).exports());

UError = require('../utils/UError');

VERSION = require('../urequire').VERSION;

Template = (function() {
  function Template() {
    this.getp = (function(_this) {
      return function(path, options) {
        if (options == null) {
          options = {};
        }
        if (!path) {
          return _this;
        } else {
          return _B.getp(_this, path, _.defaults(options, {
            separator: '.'
          }));
        }
      };
    })(this);
    this.setp = (function(_this) {
      return function(path, value, options) {
        if (options == null) {
          options = {};
        }
        if (!path) {
          return _this;
        } else {
          return _B.setp(_this, path, value, _.defaults(options, {
            separator: '.'
          }));
        }
      };
    })(this);
  }

  Template.prototype.__functionIIFE = function() {
    var codeBody, i, param, paramValuePairs, value;
    codeBody = arguments[0], paramValuePairs = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    return "(function (" + (((function() {
      var _i, _len, _results;
      _results = [];
      for (i = _i = 0, _len = paramValuePairs.length; _i < _len; i = ++_i) {
        param = paramValuePairs[i];
        if (i % 2 === 0) {
          _results.push(param);
        }
      }
      return _results;
    })()).join(', ')) + ") {\n  " + codeBody + "\n}).call(this" + (paramValuePairs.length > 0 ? ', ' : '') + (((function() {
      var _i, _len, _results;
      _results = [];
      for (i = _i = 0, _len = paramValuePairs.length; _i < _len; i = ++_i) {
        value = paramValuePairs[i];
        if (i % 2 !== 0) {
          _results.push(value);
        }
      }
      return _results;
    })()).join(', ')) + ")";
  };

  Template.prototype.__function = function() {
    var codeBody, i, param, params;
    codeBody = arguments[0], params = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    return "function (" + (((function() {
      var _i, _len, _results;
      _results = [];
      for (i = _i = 0, _len = params.length; _i < _len; i = ++_i) {
        param = params[i];
        _results.push(param);
      }
      return _results;
    })()).join(', ')) + ") {\n  " + codeBody + "\n}";
  };

  Template.prototype.deb = function(debugLevel, str) {
    var scopeInfo, _ref, _ref1, _ref2, _ref3;
    if ((((_ref = this.build) != null ? (_ref1 = _ref.template) != null ? _ref1.debugLevel : void 0 : void 0) || 0) >= debugLevel) {
      if (str) {
        str = str.replace('\n', ' | ');
        scopeInfo = ("" + this.scope + ": ") + (this.scope === 'module' ? "'" + this.module.path + "', bundle: " : '') + ("'" + this.bundle.name + "'");
        if ((((_ref2 = this.build) != null ? (_ref3 = _ref2.template) != null ? _ref3.debugLevel : void 0 : void 0) || 0) >= (debugLevel * 10)) {
          return ("\n//uRequire: " + str + " (" + scopeInfo + ")") + '\nconsole.log("\\n' + (this.scope === 'module' ? '\\u001b[32m' : '\\u001b[33m') + 'uRequire:' + str + ' (' + scopeInfo + ')' + '");\n';
        } else {
          return "\n//uRequire: " + str + " (" + scopeInfo + ")\n";
        }
      } else {
        return true;
      }
    } else {
      if (str) {
        return '';
      } else {
        return false;
      }
    }
  };

  Template.prototype.sp = function() {
    var descr, name, p, sect, sections, startMsg;
    sections = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    return ((function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = sections.length; _i < _len; _i++) {
        sect = sections[_i];
        if (_.isFunction(sect)) {
          sect = sect();
        }
        if (_.isString(sect)) {
          name = sect;
        } else if (_.isArray(sect)) {
          name = sect[0];
          descr = sect[1];
        } else if (_B.isHash(sect)) {
          name = sect.name, descr = sect.descr;
        } else {
          name = void 0;
        }
        if (name) {
          if ((p = this.getp(name))) {
            startMsg = "## START ## of '" + name + "' " + ((descr ? ': ' + descr : void 0) || '');
            if (this.deb(10)) {
              _results.push(this.deb(10, startMsg) + p + this.deb(20, "## END ## of '" + name + "'"));
            } else {
              _results.push("\n" + p + "\n");
            }
          } else {
            _results.push('');
          }
        } else {
          _results.push('');
        }
      }
      return _results;
    }).call(this)).join('');
  };

  Object.defineProperties(Template.prototype, {
    uRequireBanner: {
      get: function() {
        return "// Generated by uRequire v" + VERSION + " - template: '" + this.build.template.name + "' \n";
      }
    },
    runtimeInfo: {
      get: function() {
        return "var __isAMD = !!(typeof define === 'function' && define.amd),\n    __isNode = (typeof exports === 'object'),\n    __isWeb = !__isNode;" + (this.deb(50) ? "\nconsole.log('uRequire: runtimeInfo:\\n__isAMD=', __isAMD, '\\n__isNode=', __isNode, '\\n__isWeb=', __isWeb);" : '');
      }
    }
  });

  return Template;

})();

module.exports = Template;
