
/*!
 * Connect - profiler
 * Copyright(c) 2011 TJ Holowaychuk
 * MIT Licensed
 */

/**
 * Profile the duration of a request.
 *
 * Typically this middleware should be utilized
 * _above_ all others, as it proxies the `res.end()`
 * method, being first allows it to encapsulate all
 * other middleware.
 *
 * Example Output:
 *
 *      GET /
 *      response time 2ms
 *      memory rss 52.00kb
 *      memory vsize 2.07mb
 *      heap before 3.76mb / 8.15mb
 *      heap after 3.80mb / 8.15mb
 *
 * @api public
 */

module.exports = function profiler(){
  return function(req, res, next){
    var end = res.end
      , start = snapshot();

    // state snapshot
    function snapshot() {
      return {
          mem: process.memoryUsage()
        , time: new Date
      };
    }

    // proxy res.end()
    res.end = function(data, encoding){
      res.end = end;
      res.end(data, encoding);
      compare(req, start, snapshot())
    };

    next();
  }
};

/**
 * Compare `start` / `end` snapshots.
 *
 * @param {Incom