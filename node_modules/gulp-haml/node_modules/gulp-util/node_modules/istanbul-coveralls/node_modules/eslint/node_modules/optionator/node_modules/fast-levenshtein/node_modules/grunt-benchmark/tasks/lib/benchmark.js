/*
 * grunt-benchmark
 * https://github.com/shama/grunt-benchmark
 *
 * Copyright (c) 2013 Kyle Robinson Young
 * Licensed under the MIT license.
 */

module.exports = function(grunt) {
  'use strict';
  var exports = {};

  var Benchmark = require('benchmark');
  var path = require('path');
  var fs = require('fs');
  var async = grunt.util.async;

  // Turn function into an object
  exports.objectify = function objectify(obj) {
    return (typeof obj === 'function') ? {fn: obj} : obj;
  };

  exports.logStart = function logStart(name, src) {
    grunt.log.writeln('\nRunning ' + (name ? name + ' ' : '') + '[' + src + ']...');
  };

  exports.writeResults = function writeResults(target, dest) {
    if (dest) {
      // Create the file withe the column headers
      if (!grunt.file.exists(dest)) {
        grunt.file.write(dest, 'name,date,error,count,cycles,hz\n');
      }

      // Append a line with the test results
      var line = [
          '"' + target.name + '"',
          '"' + (new Date()).toString() + '"',
          target.error,
          target.count,
          target.cycles,
          target.hz
      ].join(',') + '\n';

      fs.appendFileSync(dest, line);
    }
  };

  exports.runBench = function runBench(src, dest, options, next) {
    var singleBenchmark = false;
    var benchmarkOptions = {};
    var tests;
    var runnable;
    var benchmarkInfo = require(path.join(process.cwd(), src));

    if (typeof benchmarkInfo === 'function') {
      /*
        // A lone function named by its file
        module.exports = function() {}  // Test function
      */
      benchmarkOptions.name = path.basename(src, '.js');
      benchmarkOptions.fn = benchmarkInfo;
      singleBenchmark = true;
    }
    else {
      // Copy it so we can modify it without breaking future tests
      benchmarkInfo = grunt.util._.extend({}, benchmarkInfo);

      if (typeof benchmarkInfo.name === 'string' && typeof benchmarkInfo.fn === 'function') {
        if (benchmarkInfo.tests) {
          grunt.log.error('Invalid benchmark: "'+benchmarkOptions.name+'" specify either export.fn or export.tests ');
          return next();
        }
        /*
          // A single test
          module.exports = {
            name: String,  // Test name
            fn: Function, // Test function
            [setup: Function],  // Other Benchmark parameters
            [teardown: Function] // etc
        */
        benchmarkOptions = benchmarkInfo;
        singleBenchmark = true;
      }
      else if (benchmarkInfo.tests) {
        /*
          // A suite of tests
          module.exports = {
            name: String, // Suite name
            tests: Object, // Object keyed on test name
            [setup: Function],  // Other Benchmark parameters
            [teardown: Function] // etc
          }
        */

        // Set name
        benchmarkInfo.name = benchmarkInfo.name || path.basename(src, '.js');

        // Extract tests
        tests = benchmarkInfo.tests;
        delete benchmarkInfo.tests;

        // Add in options
        grunt.ut