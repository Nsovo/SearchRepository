var falafel = require('falafel');
var through = require('through2');
var sourceMap = require('source-map');
var convertSourceMap = require('convert-source-map');
var slash = require('slash');

module.exports = function (file, opts) {
    if (typeof file === 'object') {
        opts = file;
        file = undefined;
    }
    if (!opts) opts = {};
    var outputFn = opts.output || 'console.log';
    
    var expected = [];
    
    var chunks = [];
    var stream = through(write, end);
    return stream;
    
    function write (buf, enc, next) { chunks.push(buf); next() }
    
    function end () {
        var body = Buffer.concat(chunks)
            .toString('utf8')
            .replace(/^#!/, '//#!')
        ;

        if (file.match(/\.json$/)) {
            this.push('module.exports=' + body);
            this.push(null);
            return;
        }
        
        var fopts = { locations: true, ecmaVersion: 6 };
        try { var src = falafel(body, fopts, walk) + '' }
        catch (err) { return onerror(err, file,body) }
        var sfile = JSON.stringify(JSON.stringify(file));

        var origBody = body;
        var bodySourceMap = convertSourceMap.fromSource(body);
        if (bodySourceMap && bodySourceMap.sourcemap.mappings) {
            bodySourceMap = new sourceMap.SourceMapConsumer(bodySourceMap.sourcemap);
            origBody = bodySourceMap.sourceContentFor(slash(file));
            function originalLoc (loc) {
                var pos = bodySourceMap.originalPositionFor(loc);
           